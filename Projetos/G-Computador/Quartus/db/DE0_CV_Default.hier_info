|CPU
clock => Register16:Aregister.clock
clock => Register16:Sregister.clock
clock => Register16:Dregister.clock
clock => pc:pcs.clock
reset => pc:pcs.reset
inM[0] => Mux16:muxAM.b[0]
inM[1] => Mux16:muxAM.b[1]
inM[2] => Mux16:muxAM.b[2]
inM[3] => Mux16:muxAM.b[3]
inM[4] => Mux16:muxAM.b[4]
inM[5] => Mux16:muxAM.b[5]
inM[6] => Mux16:muxAM.b[6]
inM[7] => Mux16:muxAM.b[7]
inM[8] => Mux16:muxAM.b[8]
inM[9] => Mux16:muxAM.b[9]
inM[10] => Mux16:muxAM.b[10]
inM[11] => Mux16:muxAM.b[11]
inM[12] => Mux16:muxAM.b[12]
inM[13] => Mux16:muxAM.b[13]
inM[14] => Mux16:muxAM.b[14]
inM[15] => Mux16:muxAM.b[15]
instruction[0] => Mux16:muxALUI.b[0]
instruction[0] => ControlUnit:ControlUnitS.instruction[0]
instruction[1] => Mux16:muxALUI.b[1]
instruction[1] => ControlUnit:ControlUnitS.instruction[1]
instruction[2] => Mux16:muxALUI.b[2]
instruction[2] => ControlUnit:ControlUnitS.instruction[2]
instruction[3] => Mux16:muxALUI.b[3]
instruction[3] => ControlUnit:ControlUnitS.instruction[3]
instruction[4] => Mux16:muxALUI.b[4]
instruction[4] => ControlUnit:ControlUnitS.instruction[4]
instruction[5] => Mux16:muxALUI.b[5]
instruction[5] => ControlUnit:ControlUnitS.instruction[5]
instruction[6] => Mux16:muxALUI.b[6]
instruction[6] => ControlUnit:ControlUnitS.instruction[6]
instruction[7] => Mux16:muxALUI.b[7]
instruction[7] => ControlUnit:ControlUnitS.instruction[7]
instruction[8] => Mux16:muxALUI.b[8]
instruction[8] => ControlUnit:ControlUnitS.instruction[8]
instruction[9] => Mux16:muxALUI.b[9]
instruction[9] => ControlUnit:ControlUnitS.instruction[9]
instruction[10] => Mux16:muxALUI.b[10]
instruction[10] => ControlUnit:ControlUnitS.instruction[10]
instruction[11] => Mux16:muxALUI.b[11]
instruction[11] => ControlUnit:ControlUnitS.instruction[11]
instruction[12] => Mux16:muxALUI.b[12]
instruction[12] => ControlUnit:ControlUnitS.instruction[12]
instruction[13] => Mux16:muxALUI.b[13]
instruction[13] => ControlUnit:ControlUnitS.instruction[13]
instruction[14] => Mux16:muxALUI.b[14]
instruction[14] => ControlUnit:ControlUnitS.instruction[14]
instruction[15] => Mux16:muxALUI.b[15]
instruction[15] => ControlUnit:ControlUnitS.instruction[15]
outM[0] << ALU:ALUS.saida[0]
outM[1] << ALU:ALUS.saida[1]
outM[2] << ALU:ALUS.saida[2]
outM[3] << ALU:ALUS.saida[3]
outM[4] << ALU:ALUS.saida[4]
outM[5] << ALU:ALUS.saida[5]
outM[6] << ALU:ALUS.saida[6]
outM[7] << ALU:ALUS.saida[7]
outM[8] << ALU:ALUS.saida[8]
outM[9] << ALU:ALUS.saida[9]
outM[10] << ALU:ALUS.saida[10]
outM[11] << ALU:ALUS.saida[11]
outM[12] << ALU:ALUS.saida[12]
outM[13] << ALU:ALUS.saida[13]
outM[14] << ALU:ALUS.saida[14]
outM[15] << ALU:ALUS.saida[15]
writeM << ControlUnit:ControlUnitS.loadM
addressM[0] << Register16:Aregister.output[0]
addressM[1] << Register16:Aregister.output[1]
addressM[2] << Register16:Aregister.output[2]
addressM[3] << Register16:Aregister.output[3]
addressM[4] << Register16:Aregister.output[4]
addressM[5] << Register16:Aregister.output[5]
addressM[6] << Register16:Aregister.output[6]
addressM[7] << Register16:Aregister.output[7]
addressM[8] << Register16:Aregister.output[8]
addressM[9] << Register16:Aregister.output[9]
addressM[10] << Register16:Aregister.output[10]
addressM[11] << Register16:Aregister.output[11]
addressM[12] << Register16:Aregister.output[12]
addressM[13] << Register16:Aregister.output[13]
addressM[14] << Register16:Aregister.output[14]
pcout[0] << pc:pcs.output[0]
pcout[1] << pc:pcs.output[1]
pcout[2] << pc:pcs.output[2]
pcout[3] << pc:pcs.output[3]
pcout[4] << pc:pcs.output[4]
pcout[5] << pc:pcs.output[5]
pcout[6] << pc:pcs.output[6]
pcout[7] << pc:pcs.output[7]
pcout[8] << pc:pcs.output[8]
pcout[9] << pc:pcs.output[9]
pcout[10] << pc:pcs.output[10]
pcout[11] << pc:pcs.output[11]
pcout[12] << pc:pcs.output[12]
pcout[13] << pc:pcs.output[13]
pcout[14] << pc:pcs.output[14]


|CPU|Mux16:muxALUI
a[0] => q.DATAB
a[1] => q.DATAB
a[2] => q.DATAB
a[3] => q.DATAB
a[4] => q.DATAB
a[5] => q.DATAB
a[6] => q.DATAB
a[7] => q.DATAB
a[8] => q.DATAB
a[9] => q.DATAB
a[10] => q.DATAB
a[11] => q.DATAB
a[12] => q.DATAB
a[13] => q.DATAB
a[14] => q.DATAB
a[15] => q.DATAB
b[0] => q.DATAA
b[1] => q.DATAA
b[2] => q.DATAA
b[3] => q.DATAA
b[4] => q.DATAA
b[5] => q.DATAA
b[6] => q.DATAA
b[7] => q.DATAA
b[8] => q.DATAA
b[9] => q.DATAA
b[10] => q.DATAA
b[11] => q.DATAA
b[12] => q.DATAA
b[13] => q.DATAA
b[14] => q.DATAA
b[15] => q.DATAA
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
q[0] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[12] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[13] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[14] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[15] <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Mux16:muxAM
a[0] => q.DATAB
a[1] => q.DATAB
a[2] => q.DATAB
a[3] => q.DATAB
a[4] => q.DATAB
a[5] => q.DATAB
a[6] => q.DATAB
a[7] => q.DATAB
a[8] => q.DATAB
a[9] => q.DATAB
a[10] => q.DATAB
a[11] => q.DATAB
a[12] => q.DATAB
a[13] => q.DATAB
a[14] => q.DATAB
a[15] => q.DATAB
b[0] => q.DATAA
b[1] => q.DATAA
b[2] => q.DATAA
b[3] => q.DATAA
b[4] => q.DATAA
b[5] => q.DATAA
b[6] => q.DATAA
b[7] => q.DATAA
b[8] => q.DATAA
b[9] => q.DATAA
b[10] => q.DATAA
b[11] => q.DATAA
b[12] => q.DATAA
b[13] => q.DATAA
b[14] => q.DATAA
b[15] => q.DATAA
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
q[0] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[12] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[13] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[14] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[15] <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Mux16:muxSD
a[0] => q.DATAB
a[1] => q.DATAB
a[2] => q.DATAB
a[3] => q.DATAB
a[4] => q.DATAB
a[5] => q.DATAB
a[6] => q.DATAB
a[7] => q.DATAB
a[8] => q.DATAB
a[9] => q.DATAB
a[10] => q.DATAB
a[11] => q.DATAB
a[12] => q.DATAB
a[13] => q.DATAB
a[14] => q.DATAB
a[15] => q.DATAB
b[0] => q.DATAA
b[1] => q.DATAA
b[2] => q.DATAA
b[3] => q.DATAA
b[4] => q.DATAA
b[5] => q.DATAA
b[6] => q.DATAA
b[7] => q.DATAA
b[8] => q.DATAA
b[9] => q.DATAA
b[10] => q.DATAA
b[11] => q.DATAA
b[12] => q.DATAA
b[13] => q.DATAA
b[14] => q.DATAA
b[15] => q.DATAA
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
q[0] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[12] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[13] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[14] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[15] <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister
clock => Register8:r1.clock
clock => Register8:r2.clock
input[0] => Register8:r1.input[0]
input[1] => Register8:r1.input[1]
input[2] => Register8:r1.input[2]
input[3] => Register8:r1.input[3]
input[4] => Register8:r1.input[4]
input[5] => Register8:r1.input[5]
input[6] => Register8:r1.input[6]
input[7] => Register8:r1.input[7]
input[8] => Register8:r2.input[0]
input[9] => Register8:r2.input[1]
input[10] => Register8:r2.input[2]
input[11] => Register8:r2.input[3]
input[12] => Register8:r2.input[4]
input[13] => Register8:r2.input[5]
input[14] => Register8:r2.input[6]
input[15] => Register8:r2.input[7]
load => Register8:r1.load
load => Register8:r2.load
output[0] <= Register8:r1.output[0]
output[1] <= Register8:r1.output[1]
output[2] <= Register8:r1.output[2]
output[3] <= Register8:r1.output[3]
output[4] <= Register8:r1.output[4]
output[5] <= Register8:r1.output[5]
output[6] <= Register8:r1.output[6]
output[7] <= Register8:r1.output[7]
output[8] <= Register8:r2.output[0]
output[9] <= Register8:r2.output[1]
output[10] <= Register8:r2.output[2]
output[11] <= Register8:r2.output[3]
output[12] <= Register8:r2.output[4]
output[13] <= Register8:r2.output[5]
output[14] <= Register8:r2.output[6]
output[15] <= Register8:r2.output[7]


|CPU|Register16:Aregister|Register8:r1
clock => BinaryDigit:c1.clock
clock => BinaryDigit:c2.clock
clock => BinaryDigit:c3.clock
clock => BinaryDigit:c4.clock
clock => BinaryDigit:c5.clock
clock => BinaryDigit:c6.clock
clock => BinaryDigit:c7.clock
clock => BinaryDigit:c8.clock
input[0] => BinaryDigit:c1.input
input[1] => BinaryDigit:c2.input
input[2] => BinaryDigit:c3.input
input[3] => BinaryDigit:c4.input
input[4] => BinaryDigit:c5.input
input[5] => BinaryDigit:c6.input
input[6] => BinaryDigit:c7.input
input[7] => BinaryDigit:c8.input
load => BinaryDigit:c1.load
load => BinaryDigit:c2.load
load => BinaryDigit:c3.load
load => BinaryDigit:c4.load
load => BinaryDigit:c5.load
load => BinaryDigit:c6.load
load => BinaryDigit:c7.load
load => BinaryDigit:c8.load
output[0] <= BinaryDigit:c1.output
output[1] <= BinaryDigit:c2.output
output[2] <= BinaryDigit:c3.output
output[3] <= BinaryDigit:c4.output
output[4] <= BinaryDigit:c5.output
output[5] <= BinaryDigit:c6.output
output[6] <= BinaryDigit:c7.output
output[7] <= BinaryDigit:c8.output


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c1
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c1|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c1|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c2
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c2|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c2|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c3
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c3|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c3|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c4
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c4|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c4|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c5
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c5|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c5|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c6
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c6|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c6|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c7
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c7|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c7|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c8
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c8|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r1|BinaryDigit:c8|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2
clock => BinaryDigit:c1.clock
clock => BinaryDigit:c2.clock
clock => BinaryDigit:c3.clock
clock => BinaryDigit:c4.clock
clock => BinaryDigit:c5.clock
clock => BinaryDigit:c6.clock
clock => BinaryDigit:c7.clock
clock => BinaryDigit:c8.clock
input[0] => BinaryDigit:c1.input
input[1] => BinaryDigit:c2.input
input[2] => BinaryDigit:c3.input
input[3] => BinaryDigit:c4.input
input[4] => BinaryDigit:c5.input
input[5] => BinaryDigit:c6.input
input[6] => BinaryDigit:c7.input
input[7] => BinaryDigit:c8.input
load => BinaryDigit:c1.load
load => BinaryDigit:c2.load
load => BinaryDigit:c3.load
load => BinaryDigit:c4.load
load => BinaryDigit:c5.load
load => BinaryDigit:c6.load
load => BinaryDigit:c7.load
load => BinaryDigit:c8.load
output[0] <= BinaryDigit:c1.output
output[1] <= BinaryDigit:c2.output
output[2] <= BinaryDigit:c3.output
output[3] <= BinaryDigit:c4.output
output[4] <= BinaryDigit:c5.output
output[5] <= BinaryDigit:c6.output
output[6] <= BinaryDigit:c7.output
output[7] <= BinaryDigit:c8.output


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c1
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c1|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c1|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c2
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c2|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c2|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c3
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c3|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c3|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c4
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c4|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c4|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c5
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c5|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c5|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c6
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c6|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c6|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c7
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c7|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c7|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c8
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c8|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Aregister|Register8:r2|BinaryDigit:c8|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister
clock => Register8:r1.clock
clock => Register8:r2.clock
input[0] => Register8:r1.input[0]
input[1] => Register8:r1.input[1]
input[2] => Register8:r1.input[2]
input[3] => Register8:r1.input[3]
input[4] => Register8:r1.input[4]
input[5] => Register8:r1.input[5]
input[6] => Register8:r1.input[6]
input[7] => Register8:r1.input[7]
input[8] => Register8:r2.input[0]
input[9] => Register8:r2.input[1]
input[10] => Register8:r2.input[2]
input[11] => Register8:r2.input[3]
input[12] => Register8:r2.input[4]
input[13] => Register8:r2.input[5]
input[14] => Register8:r2.input[6]
input[15] => Register8:r2.input[7]
load => Register8:r1.load
load => Register8:r2.load
output[0] <= Register8:r1.output[0]
output[1] <= Register8:r1.output[1]
output[2] <= Register8:r1.output[2]
output[3] <= Register8:r1.output[3]
output[4] <= Register8:r1.output[4]
output[5] <= Register8:r1.output[5]
output[6] <= Register8:r1.output[6]
output[7] <= Register8:r1.output[7]
output[8] <= Register8:r2.output[0]
output[9] <= Register8:r2.output[1]
output[10] <= Register8:r2.output[2]
output[11] <= Register8:r2.output[3]
output[12] <= Register8:r2.output[4]
output[13] <= Register8:r2.output[5]
output[14] <= Register8:r2.output[6]
output[15] <= Register8:r2.output[7]


|CPU|Register16:Sregister|Register8:r1
clock => BinaryDigit:c1.clock
clock => BinaryDigit:c2.clock
clock => BinaryDigit:c3.clock
clock => BinaryDigit:c4.clock
clock => BinaryDigit:c5.clock
clock => BinaryDigit:c6.clock
clock => BinaryDigit:c7.clock
clock => BinaryDigit:c8.clock
input[0] => BinaryDigit:c1.input
input[1] => BinaryDigit:c2.input
input[2] => BinaryDigit:c3.input
input[3] => BinaryDigit:c4.input
input[4] => BinaryDigit:c5.input
input[5] => BinaryDigit:c6.input
input[6] => BinaryDigit:c7.input
input[7] => BinaryDigit:c8.input
load => BinaryDigit:c1.load
load => BinaryDigit:c2.load
load => BinaryDigit:c3.load
load => BinaryDigit:c4.load
load => BinaryDigit:c5.load
load => BinaryDigit:c6.load
load => BinaryDigit:c7.load
load => BinaryDigit:c8.load
output[0] <= BinaryDigit:c1.output
output[1] <= BinaryDigit:c2.output
output[2] <= BinaryDigit:c3.output
output[3] <= BinaryDigit:c4.output
output[4] <= BinaryDigit:c5.output
output[5] <= BinaryDigit:c6.output
output[6] <= BinaryDigit:c7.output
output[7] <= BinaryDigit:c8.output


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c1
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c1|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c1|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c2
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c2|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c2|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c3
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c3|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c3|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c4
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c4|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c4|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c5
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c5|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c5|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c6
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c6|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c6|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c7
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c7|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c7|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c8
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c8|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r1|BinaryDigit:c8|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2
clock => BinaryDigit:c1.clock
clock => BinaryDigit:c2.clock
clock => BinaryDigit:c3.clock
clock => BinaryDigit:c4.clock
clock => BinaryDigit:c5.clock
clock => BinaryDigit:c6.clock
clock => BinaryDigit:c7.clock
clock => BinaryDigit:c8.clock
input[0] => BinaryDigit:c1.input
input[1] => BinaryDigit:c2.input
input[2] => BinaryDigit:c3.input
input[3] => BinaryDigit:c4.input
input[4] => BinaryDigit:c5.input
input[5] => BinaryDigit:c6.input
input[6] => BinaryDigit:c7.input
input[7] => BinaryDigit:c8.input
load => BinaryDigit:c1.load
load => BinaryDigit:c2.load
load => BinaryDigit:c3.load
load => BinaryDigit:c4.load
load => BinaryDigit:c5.load
load => BinaryDigit:c6.load
load => BinaryDigit:c7.load
load => BinaryDigit:c8.load
output[0] <= BinaryDigit:c1.output
output[1] <= BinaryDigit:c2.output
output[2] <= BinaryDigit:c3.output
output[3] <= BinaryDigit:c4.output
output[4] <= BinaryDigit:c5.output
output[5] <= BinaryDigit:c6.output
output[6] <= BinaryDigit:c7.output
output[7] <= BinaryDigit:c8.output


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c1
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c1|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c1|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c2
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c2|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c2|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c3
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c3|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c3|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c4
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c4|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c4|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c5
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c5|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c5|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c6
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c6|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c6|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c7
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c7|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c7|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c8
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c8|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Sregister|Register8:r2|BinaryDigit:c8|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister
clock => Register8:r1.clock
clock => Register8:r2.clock
input[0] => Register8:r1.input[0]
input[1] => Register8:r1.input[1]
input[2] => Register8:r1.input[2]
input[3] => Register8:r1.input[3]
input[4] => Register8:r1.input[4]
input[5] => Register8:r1.input[5]
input[6] => Register8:r1.input[6]
input[7] => Register8:r1.input[7]
input[8] => Register8:r2.input[0]
input[9] => Register8:r2.input[1]
input[10] => Register8:r2.input[2]
input[11] => Register8:r2.input[3]
input[12] => Register8:r2.input[4]
input[13] => Register8:r2.input[5]
input[14] => Register8:r2.input[6]
input[15] => Register8:r2.input[7]
load => Register8:r1.load
load => Register8:r2.load
output[0] <= Register8:r1.output[0]
output[1] <= Register8:r1.output[1]
output[2] <= Register8:r1.output[2]
output[3] <= Register8:r1.output[3]
output[4] <= Register8:r1.output[4]
output[5] <= Register8:r1.output[5]
output[6] <= Register8:r1.output[6]
output[7] <= Register8:r1.output[7]
output[8] <= Register8:r2.output[0]
output[9] <= Register8:r2.output[1]
output[10] <= Register8:r2.output[2]
output[11] <= Register8:r2.output[3]
output[12] <= Register8:r2.output[4]
output[13] <= Register8:r2.output[5]
output[14] <= Register8:r2.output[6]
output[15] <= Register8:r2.output[7]


|CPU|Register16:Dregister|Register8:r1
clock => BinaryDigit:c1.clock
clock => BinaryDigit:c2.clock
clock => BinaryDigit:c3.clock
clock => BinaryDigit:c4.clock
clock => BinaryDigit:c5.clock
clock => BinaryDigit:c6.clock
clock => BinaryDigit:c7.clock
clock => BinaryDigit:c8.clock
input[0] => BinaryDigit:c1.input
input[1] => BinaryDigit:c2.input
input[2] => BinaryDigit:c3.input
input[3] => BinaryDigit:c4.input
input[4] => BinaryDigit:c5.input
input[5] => BinaryDigit:c6.input
input[6] => BinaryDigit:c7.input
input[7] => BinaryDigit:c8.input
load => BinaryDigit:c1.load
load => BinaryDigit:c2.load
load => BinaryDigit:c3.load
load => BinaryDigit:c4.load
load => BinaryDigit:c5.load
load => BinaryDigit:c6.load
load => BinaryDigit:c7.load
load => BinaryDigit:c8.load
output[0] <= BinaryDigit:c1.output
output[1] <= BinaryDigit:c2.output
output[2] <= BinaryDigit:c3.output
output[3] <= BinaryDigit:c4.output
output[4] <= BinaryDigit:c5.output
output[5] <= BinaryDigit:c6.output
output[6] <= BinaryDigit:c7.output
output[7] <= BinaryDigit:c8.output


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c1
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c1|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c1|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c2
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c2|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c2|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c3
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c3|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c3|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c4
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c4|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c4|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c5
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c5|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c5|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c6
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c6|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c6|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c7
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c7|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c7|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c8
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c8|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r1|BinaryDigit:c8|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2
clock => BinaryDigit:c1.clock
clock => BinaryDigit:c2.clock
clock => BinaryDigit:c3.clock
clock => BinaryDigit:c4.clock
clock => BinaryDigit:c5.clock
clock => BinaryDigit:c6.clock
clock => BinaryDigit:c7.clock
clock => BinaryDigit:c8.clock
input[0] => BinaryDigit:c1.input
input[1] => BinaryDigit:c2.input
input[2] => BinaryDigit:c3.input
input[3] => BinaryDigit:c4.input
input[4] => BinaryDigit:c5.input
input[5] => BinaryDigit:c6.input
input[6] => BinaryDigit:c7.input
input[7] => BinaryDigit:c8.input
load => BinaryDigit:c1.load
load => BinaryDigit:c2.load
load => BinaryDigit:c3.load
load => BinaryDigit:c4.load
load => BinaryDigit:c5.load
load => BinaryDigit:c6.load
load => BinaryDigit:c7.load
load => BinaryDigit:c8.load
output[0] <= BinaryDigit:c1.output
output[1] <= BinaryDigit:c2.output
output[2] <= BinaryDigit:c3.output
output[3] <= BinaryDigit:c4.output
output[4] <= BinaryDigit:c5.output
output[5] <= BinaryDigit:c6.output
output[6] <= BinaryDigit:c7.output
output[7] <= BinaryDigit:c8.output


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c1
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c1|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c1|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c2
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c2|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c2|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c3
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c3|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c3|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c4
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c4|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c4|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c5
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c5|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c5|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c6
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c6|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c6|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c7
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c7|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c7|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c8
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c8|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|Register16:Dregister|Register8:r2|BinaryDigit:c8|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS
x[0] => zerador16:zx16.a[0]
x[1] => zerador16:zx16.a[1]
x[2] => zerador16:zx16.a[2]
x[3] => zerador16:zx16.a[3]
x[4] => zerador16:zx16.a[4]
x[5] => zerador16:zx16.a[5]
x[6] => zerador16:zx16.a[6]
x[7] => zerador16:zx16.a[7]
x[8] => zerador16:zx16.a[8]
x[9] => zerador16:zx16.a[9]
x[10] => zerador16:zx16.a[10]
x[11] => zerador16:zx16.a[11]
x[12] => zerador16:zx16.a[12]
x[13] => zerador16:zx16.a[13]
x[14] => zerador16:zx16.a[14]
x[15] => zerador16:zx16.a[15]
y[0] => zerador16:zy16.a[0]
y[1] => zerador16:zy16.a[1]
y[2] => zerador16:zy16.a[2]
y[3] => zerador16:zy16.a[3]
y[4] => zerador16:zy16.a[4]
y[5] => zerador16:zy16.a[5]
y[6] => zerador16:zy16.a[6]
y[7] => zerador16:zy16.a[7]
y[8] => zerador16:zy16.a[8]
y[9] => zerador16:zy16.a[9]
y[10] => zerador16:zy16.a[10]
y[11] => zerador16:zy16.a[11]
y[12] => zerador16:zy16.a[12]
y[13] => zerador16:zy16.a[13]
y[14] => zerador16:zy16.a[14]
y[15] => zerador16:zy16.a[15]
zx => zerador16:zx16.z
nx => inversor16:ix16.z
zy => zerador16:zy16.z
ny => inversor16:iy16.z
f => Mux16:mx16.sel
no => inversor16:if16.z
zr <= comparador16:comp16.zr
ng <= comparador16:comp16.ng
saida[0] <= inversor16:if16.y[0]
saida[1] <= inversor16:if16.y[1]
saida[2] <= inversor16:if16.y[2]
saida[3] <= inversor16:if16.y[3]
saida[4] <= inversor16:if16.y[4]
saida[5] <= inversor16:if16.y[5]
saida[6] <= inversor16:if16.y[6]
saida[7] <= inversor16:if16.y[7]
saida[8] <= inversor16:if16.y[8]
saida[9] <= inversor16:if16.y[9]
saida[10] <= inversor16:if16.y[10]
saida[11] <= inversor16:if16.y[11]
saida[12] <= inversor16:if16.y[12]
saida[13] <= inversor16:if16.y[13]
saida[14] <= inversor16:if16.y[14]
saida[15] <= inversor16:if16.y[15]


|CPU|ALU:ALUS|zerador16:zx16
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
a[0] => y.DATAB
a[1] => y.DATAB
a[2] => y.DATAB
a[3] => y.DATAB
a[4] => y.DATAB
a[5] => y.DATAB
a[6] => y.DATAB
a[7] => y.DATAB
a[8] => y.DATAB
a[9] => y.DATAB
a[10] => y.DATAB
a[11] => y.DATAB
a[12] => y.DATAB
a[13] => y.DATAB
a[14] => y.DATAB
a[15] => y.DATAB
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[7] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[8] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[9] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[10] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[11] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[12] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[13] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[14] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[15] <= y.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|zerador16:zy16
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
a[0] => y.DATAB
a[1] => y.DATAB
a[2] => y.DATAB
a[3] => y.DATAB
a[4] => y.DATAB
a[5] => y.DATAB
a[6] => y.DATAB
a[7] => y.DATAB
a[8] => y.DATAB
a[9] => y.DATAB
a[10] => y.DATAB
a[11] => y.DATAB
a[12] => y.DATAB
a[13] => y.DATAB
a[14] => y.DATAB
a[15] => y.DATAB
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[7] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[8] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[9] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[10] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[11] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[12] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[13] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[14] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[15] <= y.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|inversor16:ix16
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
a[0] => y.DATAB
a[0] => y.DATAA
a[1] => y.DATAB
a[1] => y.DATAA
a[2] => y.DATAB
a[2] => y.DATAA
a[3] => y.DATAB
a[3] => y.DATAA
a[4] => y.DATAB
a[4] => y.DATAA
a[5] => y.DATAB
a[5] => y.DATAA
a[6] => y.DATAB
a[6] => y.DATAA
a[7] => y.DATAB
a[7] => y.DATAA
a[8] => y.DATAB
a[8] => y.DATAA
a[9] => y.DATAB
a[9] => y.DATAA
a[10] => y.DATAB
a[10] => y.DATAA
a[11] => y.DATAB
a[11] => y.DATAA
a[12] => y.DATAB
a[12] => y.DATAA
a[13] => y.DATAB
a[13] => y.DATAA
a[14] => y.DATAB
a[14] => y.DATAA
a[15] => y.DATAB
a[15] => y.DATAA
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[7] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[8] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[9] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[10] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[11] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[12] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[13] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[14] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[15] <= y.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|inversor16:iy16
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
a[0] => y.DATAB
a[0] => y.DATAA
a[1] => y.DATAB
a[1] => y.DATAA
a[2] => y.DATAB
a[2] => y.DATAA
a[3] => y.DATAB
a[3] => y.DATAA
a[4] => y.DATAB
a[4] => y.DATAA
a[5] => y.DATAB
a[5] => y.DATAA
a[6] => y.DATAB
a[6] => y.DATAA
a[7] => y.DATAB
a[7] => y.DATAA
a[8] => y.DATAB
a[8] => y.DATAA
a[9] => y.DATAB
a[9] => y.DATAA
a[10] => y.DATAB
a[10] => y.DATAA
a[11] => y.DATAB
a[11] => y.DATAA
a[12] => y.DATAB
a[12] => y.DATAA
a[13] => y.DATAB
a[13] => y.DATAA
a[14] => y.DATAB
a[14] => y.DATAA
a[15] => y.DATAB
a[15] => y.DATAA
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[7] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[8] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[9] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[10] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[11] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[12] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[13] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[14] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[15] <= y.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|And16:an16
a[0] => q.IN0
a[1] => q.IN0
a[2] => q.IN0
a[3] => q.IN0
a[4] => q.IN0
a[5] => q.IN0
a[6] => q.IN0
a[7] => q.IN0
a[8] => q.IN0
a[9] => q.IN0
a[10] => q.IN0
a[11] => q.IN0
a[12] => q.IN0
a[13] => q.IN0
a[14] => q.IN0
a[15] => q.IN0
b[0] => q.IN1
b[1] => q.IN1
b[2] => q.IN1
b[3] => q.IN1
b[4] => q.IN1
b[5] => q.IN1
b[6] => q.IN1
b[7] => q.IN1
b[8] => q.IN1
b[9] => q.IN1
b[10] => q.IN1
b[11] => q.IN1
b[12] => q.IN1
b[13] => q.IN1
b[14] => q.IN1
b[15] => q.IN1
q[0] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[12] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[13] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[14] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[15] <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16
a[0] => FullAdder:fullader1.a
a[1] => FullAdder:fulladder2.a
a[2] => FullAdder:fulladder3.a
a[3] => FullAdder:fulladder4.a
a[4] => FullAdder:fulladder5.a
a[5] => FullAdder:fulladder6.a
a[6] => FullAdder:fulladder7.a
a[7] => FullAdder:fulladder8.a
a[8] => FullAdder:fulladder9.a
a[9] => FullAdder:fulladder10.a
a[10] => FullAdder:fulladder11.a
a[11] => FullAdder:fulladder12.a
a[12] => FullAdder:fulladder13.a
a[13] => FullAdder:fulladder14.a
a[14] => FullAdder:fulladder15.a
a[15] => FullAdder:fulladder16.a
b[0] => FullAdder:fullader1.b
b[1] => FullAdder:fulladder2.b
b[2] => FullAdder:fulladder3.b
b[3] => FullAdder:fulladder4.b
b[4] => FullAdder:fulladder5.b
b[5] => FullAdder:fulladder6.b
b[6] => FullAdder:fulladder7.b
b[7] => FullAdder:fulladder8.b
b[8] => FullAdder:fulladder9.b
b[9] => FullAdder:fulladder10.b
b[10] => FullAdder:fulladder11.b
b[11] => FullAdder:fulladder12.b
b[12] => FullAdder:fulladder13.b
b[13] => FullAdder:fulladder14.b
b[14] => FullAdder:fulladder15.b
b[15] => FullAdder:fulladder16.b
q[0] <= FullAdder:fullader1.soma
q[1] <= FullAdder:fulladder2.soma
q[2] <= FullAdder:fulladder3.soma
q[3] <= FullAdder:fulladder4.soma
q[4] <= FullAdder:fulladder5.soma
q[5] <= FullAdder:fulladder6.soma
q[6] <= FullAdder:fulladder7.soma
q[7] <= FullAdder:fulladder8.soma
q[8] <= FullAdder:fulladder9.soma
q[9] <= FullAdder:fulladder10.soma
q[10] <= FullAdder:fulladder11.soma
q[11] <= FullAdder:fulladder12.soma
q[12] <= FullAdder:fulladder13.soma
q[13] <= FullAdder:fulladder14.soma
q[14] <= FullAdder:fulladder15.soma
q[15] <= FullAdder:fulladder16.soma


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fullader1
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fullader1|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fullader1|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder2
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder2|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder2|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder3
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder3|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder3|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder4
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder4|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder4|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder5
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder5|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder5|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder6
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder6|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder6|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder7
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder7|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder7|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder8
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder8|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder8|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder9
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder9|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder9|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder10
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder10|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder10|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder11
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder11|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder11|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder12
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder12|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder12|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder13
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder13|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder13|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder14
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder14|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder14|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder15
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder15|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder15|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder16
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder16|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Add16:ad16|FullAdder:fulladder16|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|Mux16:mx16
a[0] => q.DATAB
a[1] => q.DATAB
a[2] => q.DATAB
a[3] => q.DATAB
a[4] => q.DATAB
a[5] => q.DATAB
a[6] => q.DATAB
a[7] => q.DATAB
a[8] => q.DATAB
a[9] => q.DATAB
a[10] => q.DATAB
a[11] => q.DATAB
a[12] => q.DATAB
a[13] => q.DATAB
a[14] => q.DATAB
a[15] => q.DATAB
b[0] => q.DATAA
b[1] => q.DATAA
b[2] => q.DATAA
b[3] => q.DATAA
b[4] => q.DATAA
b[5] => q.DATAA
b[6] => q.DATAA
b[7] => q.DATAA
b[8] => q.DATAA
b[9] => q.DATAA
b[10] => q.DATAA
b[11] => q.DATAA
b[12] => q.DATAA
b[13] => q.DATAA
b[14] => q.DATAA
b[15] => q.DATAA
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
q[0] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[12] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[13] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[14] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[15] <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|inversor16:if16
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
z => y.OUTPUTSELECT
a[0] => y.DATAB
a[0] => y.DATAA
a[1] => y.DATAB
a[1] => y.DATAA
a[2] => y.DATAB
a[2] => y.DATAA
a[3] => y.DATAB
a[3] => y.DATAA
a[4] => y.DATAB
a[4] => y.DATAA
a[5] => y.DATAB
a[5] => y.DATAA
a[6] => y.DATAB
a[6] => y.DATAA
a[7] => y.DATAB
a[7] => y.DATAA
a[8] => y.DATAB
a[8] => y.DATAA
a[9] => y.DATAB
a[9] => y.DATAA
a[10] => y.DATAB
a[10] => y.DATAA
a[11] => y.DATAB
a[11] => y.DATAA
a[12] => y.DATAB
a[12] => y.DATAA
a[13] => y.DATAB
a[13] => y.DATAA
a[14] => y.DATAB
a[14] => y.DATAA
a[15] => y.DATAB
a[15] => y.DATAA
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[7] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[8] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[9] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[10] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[11] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[12] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[13] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[14] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[15] <= y.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ALU:ALUS|comparador16:comp16
a[0] => Equal0.IN15
a[1] => Equal0.IN14
a[2] => Equal0.IN13
a[3] => Equal0.IN12
a[4] => Equal0.IN11
a[5] => Equal0.IN10
a[6] => Equal0.IN9
a[7] => Equal0.IN8
a[8] => Equal0.IN7
a[9] => Equal0.IN6
a[10] => Equal0.IN5
a[11] => Equal0.IN4
a[12] => Equal0.IN3
a[13] => Equal0.IN2
a[14] => Equal0.IN1
a[15] => ng.DATAIN
a[15] => Equal0.IN0
zr <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
ng <= a[15].DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs
clock => Register16:c1.clock
increment => v3[15].OUTPUTSELECT
increment => v3[14].OUTPUTSELECT
increment => v3[13].OUTPUTSELECT
increment => v3[12].OUTPUTSELECT
increment => v3[11].OUTPUTSELECT
increment => v3[10].OUTPUTSELECT
increment => v3[9].OUTPUTSELECT
increment => v3[8].OUTPUTSELECT
increment => v3[7].OUTPUTSELECT
increment => v3[6].OUTPUTSELECT
increment => v3[5].OUTPUTSELECT
increment => v3[4].OUTPUTSELECT
increment => v3[3].OUTPUTSELECT
increment => v3[2].OUTPUTSELECT
increment => v3[1].OUTPUTSELECT
increment => v3[0].OUTPUTSELECT
load => e1.DATAA
reset => e1.OUTPUTSELECT
reset => v2[15].OUTPUTSELECT
reset => v2[14].OUTPUTSELECT
reset => v2[13].OUTPUTSELECT
reset => v2[12].OUTPUTSELECT
reset => v2[11].OUTPUTSELECT
reset => v2[10].OUTPUTSELECT
reset => v2[9].OUTPUTSELECT
reset => v2[8].OUTPUTSELECT
reset => v2[7].OUTPUTSELECT
reset => v2[6].OUTPUTSELECT
reset => v2[5].OUTPUTSELECT
reset => v2[4].OUTPUTSELECT
reset => v2[3].OUTPUTSELECT
reset => v2[2].OUTPUTSELECT
reset => v2[1].OUTPUTSELECT
reset => v2[0].OUTPUTSELECT
input[0] => v2[0].DATAA
input[1] => v2[1].DATAA
input[2] => v2[2].DATAA
input[3] => v2[3].DATAA
input[4] => v2[4].DATAA
input[5] => v2[5].DATAA
input[6] => v2[6].DATAA
input[7] => v2[7].DATAA
input[8] => v2[8].DATAA
input[9] => v2[9].DATAA
input[10] => v2[10].DATAA
input[11] => v2[11].DATAA
input[12] => v2[12].DATAA
input[13] => v2[13].DATAA
input[14] => v2[14].DATAA
input[15] => v2[15].DATAA
output[0] <= Mux16:c3.q[0]
output[1] <= Mux16:c3.q[1]
output[2] <= Mux16:c3.q[2]
output[3] <= Mux16:c3.q[3]
output[4] <= Mux16:c3.q[4]
output[5] <= Mux16:c3.q[5]
output[6] <= Mux16:c3.q[6]
output[7] <= Mux16:c3.q[7]
output[8] <= Mux16:c3.q[8]
output[9] <= Mux16:c3.q[9]
output[10] <= Mux16:c3.q[10]
output[11] <= Mux16:c3.q[11]
output[12] <= Mux16:c3.q[12]
output[13] <= Mux16:c3.q[13]
output[14] <= Mux16:c3.q[14]
output[15] <= Mux16:c3.q[15]


|CPU|PC:pcs|Inc16:c2
a[0] => Add16:fullader1.a[0]
a[1] => Add16:fullader1.a[1]
a[2] => Add16:fullader1.a[2]
a[3] => Add16:fullader1.a[3]
a[4] => Add16:fullader1.a[4]
a[5] => Add16:fullader1.a[5]
a[6] => Add16:fullader1.a[6]
a[7] => Add16:fullader1.a[7]
a[8] => Add16:fullader1.a[8]
a[9] => Add16:fullader1.a[9]
a[10] => Add16:fullader1.a[10]
a[11] => Add16:fullader1.a[11]
a[12] => Add16:fullader1.a[12]
a[13] => Add16:fullader1.a[13]
a[14] => Add16:fullader1.a[14]
a[15] => Add16:fullader1.a[15]
q[0] <= Add16:fullader1.q[0]
q[1] <= Add16:fullader1.q[1]
q[2] <= Add16:fullader1.q[2]
q[3] <= Add16:fullader1.q[3]
q[4] <= Add16:fullader1.q[4]
q[5] <= Add16:fullader1.q[5]
q[6] <= Add16:fullader1.q[6]
q[7] <= Add16:fullader1.q[7]
q[8] <= Add16:fullader1.q[8]
q[9] <= Add16:fullader1.q[9]
q[10] <= Add16:fullader1.q[10]
q[11] <= Add16:fullader1.q[11]
q[12] <= Add16:fullader1.q[12]
q[13] <= Add16:fullader1.q[13]
q[14] <= Add16:fullader1.q[14]
q[15] <= Add16:fullader1.q[15]


|CPU|PC:pcs|Inc16:c2|Add16:fullader1
a[0] => FullAdder:fullader1.a
a[1] => FullAdder:fulladder2.a
a[2] => FullAdder:fulladder3.a
a[3] => FullAdder:fulladder4.a
a[4] => FullAdder:fulladder5.a
a[5] => FullAdder:fulladder6.a
a[6] => FullAdder:fulladder7.a
a[7] => FullAdder:fulladder8.a
a[8] => FullAdder:fulladder9.a
a[9] => FullAdder:fulladder10.a
a[10] => FullAdder:fulladder11.a
a[11] => FullAdder:fulladder12.a
a[12] => FullAdder:fulladder13.a
a[13] => FullAdder:fulladder14.a
a[14] => FullAdder:fulladder15.a
a[15] => FullAdder:fulladder16.a
b[0] => FullAdder:fullader1.b
b[1] => FullAdder:fulladder2.b
b[2] => FullAdder:fulladder3.b
b[3] => FullAdder:fulladder4.b
b[4] => FullAdder:fulladder5.b
b[5] => FullAdder:fulladder6.b
b[6] => FullAdder:fulladder7.b
b[7] => FullAdder:fulladder8.b
b[8] => FullAdder:fulladder9.b
b[9] => FullAdder:fulladder10.b
b[10] => FullAdder:fulladder11.b
b[11] => FullAdder:fulladder12.b
b[12] => FullAdder:fulladder13.b
b[13] => FullAdder:fulladder14.b
b[14] => FullAdder:fulladder15.b
b[15] => FullAdder:fulladder16.b
q[0] <= FullAdder:fullader1.soma
q[1] <= FullAdder:fulladder2.soma
q[2] <= FullAdder:fulladder3.soma
q[3] <= FullAdder:fulladder4.soma
q[4] <= FullAdder:fulladder5.soma
q[5] <= FullAdder:fulladder6.soma
q[6] <= FullAdder:fulladder7.soma
q[7] <= FullAdder:fulladder8.soma
q[8] <= FullAdder:fulladder9.soma
q[9] <= FullAdder:fulladder10.soma
q[10] <= FullAdder:fulladder11.soma
q[11] <= FullAdder:fulladder12.soma
q[12] <= FullAdder:fulladder13.soma
q[13] <= FullAdder:fulladder14.soma
q[14] <= FullAdder:fulladder15.soma
q[15] <= FullAdder:fulladder16.soma


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fullader1
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fullader1|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fullader1|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder2
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder2|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder2|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder3
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder3|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder3|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder4
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder4|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder4|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder5
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder5|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder5|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder6
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder6|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder6|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder7
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder7|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder7|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder8
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder8|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder8|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder9
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder9|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder9|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder10
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder10|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder10|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder11
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder11|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder11|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder12
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder12|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder12|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder13
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder13|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder13|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder14
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder14|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder14|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder15
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder15|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder15|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder16
a => HalfAdder:HA1.a
b => HalfAdder:HA1.b
c => HalfAdder:HA2.b
soma <= HalfAdder:HA2.soma
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder16|HalfAdder:HA1
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Inc16:c2|Add16:fullader1|FullAdder:fulladder16|HalfAdder:HA2
a => soma.IN0
a => vaium.IN0
b => soma.IN1
b => vaium.IN1
soma <= soma.DB_MAX_OUTPUT_PORT_TYPE
vaium <= vaium.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1
clock => Register8:r1.clock
clock => Register8:r2.clock
input[0] => Register8:r1.input[0]
input[1] => Register8:r1.input[1]
input[2] => Register8:r1.input[2]
input[3] => Register8:r1.input[3]
input[4] => Register8:r1.input[4]
input[5] => Register8:r1.input[5]
input[6] => Register8:r1.input[6]
input[7] => Register8:r1.input[7]
input[8] => Register8:r2.input[0]
input[9] => Register8:r2.input[1]
input[10] => Register8:r2.input[2]
input[11] => Register8:r2.input[3]
input[12] => Register8:r2.input[4]
input[13] => Register8:r2.input[5]
input[14] => Register8:r2.input[6]
input[15] => Register8:r2.input[7]
load => Register8:r1.load
load => Register8:r2.load
output[0] <= Register8:r1.output[0]
output[1] <= Register8:r1.output[1]
output[2] <= Register8:r1.output[2]
output[3] <= Register8:r1.output[3]
output[4] <= Register8:r1.output[4]
output[5] <= Register8:r1.output[5]
output[6] <= Register8:r1.output[6]
output[7] <= Register8:r1.output[7]
output[8] <= Register8:r2.output[0]
output[9] <= Register8:r2.output[1]
output[10] <= Register8:r2.output[2]
output[11] <= Register8:r2.output[3]
output[12] <= Register8:r2.output[4]
output[13] <= Register8:r2.output[5]
output[14] <= Register8:r2.output[6]
output[15] <= Register8:r2.output[7]


|CPU|PC:pcs|Register16:c1|Register8:r1
clock => BinaryDigit:c1.clock
clock => BinaryDigit:c2.clock
clock => BinaryDigit:c3.clock
clock => BinaryDigit:c4.clock
clock => BinaryDigit:c5.clock
clock => BinaryDigit:c6.clock
clock => BinaryDigit:c7.clock
clock => BinaryDigit:c8.clock
input[0] => BinaryDigit:c1.input
input[1] => BinaryDigit:c2.input
input[2] => BinaryDigit:c3.input
input[3] => BinaryDigit:c4.input
input[4] => BinaryDigit:c5.input
input[5] => BinaryDigit:c6.input
input[6] => BinaryDigit:c7.input
input[7] => BinaryDigit:c8.input
load => BinaryDigit:c1.load
load => BinaryDigit:c2.load
load => BinaryDigit:c3.load
load => BinaryDigit:c4.load
load => BinaryDigit:c5.load
load => BinaryDigit:c6.load
load => BinaryDigit:c7.load
load => BinaryDigit:c8.load
output[0] <= BinaryDigit:c1.output
output[1] <= BinaryDigit:c2.output
output[2] <= BinaryDigit:c3.output
output[3] <= BinaryDigit:c4.output
output[4] <= BinaryDigit:c5.output
output[5] <= BinaryDigit:c6.output
output[6] <= BinaryDigit:c7.output
output[7] <= BinaryDigit:c8.output


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c1
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c1|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c1|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c2
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c2|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c2|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c3
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c3|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c3|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c4
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c4|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c4|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c5
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c5|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c5|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c6
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c6|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c6|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c7
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c7|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c7|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c8
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c8|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r1|BinaryDigit:c8|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2
clock => BinaryDigit:c1.clock
clock => BinaryDigit:c2.clock
clock => BinaryDigit:c3.clock
clock => BinaryDigit:c4.clock
clock => BinaryDigit:c5.clock
clock => BinaryDigit:c6.clock
clock => BinaryDigit:c7.clock
clock => BinaryDigit:c8.clock
input[0] => BinaryDigit:c1.input
input[1] => BinaryDigit:c2.input
input[2] => BinaryDigit:c3.input
input[3] => BinaryDigit:c4.input
input[4] => BinaryDigit:c5.input
input[5] => BinaryDigit:c6.input
input[6] => BinaryDigit:c7.input
input[7] => BinaryDigit:c8.input
load => BinaryDigit:c1.load
load => BinaryDigit:c2.load
load => BinaryDigit:c3.load
load => BinaryDigit:c4.load
load => BinaryDigit:c5.load
load => BinaryDigit:c6.load
load => BinaryDigit:c7.load
load => BinaryDigit:c8.load
output[0] <= BinaryDigit:c1.output
output[1] <= BinaryDigit:c2.output
output[2] <= BinaryDigit:c3.output
output[3] <= BinaryDigit:c4.output
output[4] <= BinaryDigit:c5.output
output[5] <= BinaryDigit:c6.output
output[6] <= BinaryDigit:c7.output
output[7] <= BinaryDigit:c8.output


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c1
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c1|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c1|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c2
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c2|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c2|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c3
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c3|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c3|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c4
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c4|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c4|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c5
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c5|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c5|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c6
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c6|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c6|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c7
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c7|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c7|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c8
clock => FlipFlopD:c2.clock
input => Mux2Way:c1.b
load => Mux2Way:c1.sel
output <= FlipFlopD:c2.q


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c8|Mux2Way:c1
a => q.DATAB
b => q.DATAA
sel => q.OUTPUTSELECT
q <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Register16:c1|Register8:r2|BinaryDigit:c8|FlipFlopD:c2
clock => q~reg0.CLK
d => q~reg0.DATAIN
clear => q~reg0.ACLR
clear => q.IN0
preset => q.IN1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CPU|PC:pcs|Mux16:c3
a[0] => q.DATAB
a[1] => q.DATAB
a[2] => q.DATAB
a[3] => q.DATAB
a[4] => q.DATAB
a[5] => q.DATAB
a[6] => q.DATAB
a[7] => q.DATAB
a[8] => q.DATAB
a[9] => q.DATAB
a[10] => q.DATAB
a[11] => q.DATAB
a[12] => q.DATAB
a[13] => q.DATAB
a[14] => q.DATAB
a[15] => q.DATAB
b[0] => q.DATAA
b[1] => q.DATAA
b[2] => q.DATAA
b[3] => q.DATAA
b[4] => q.DATAA
b[5] => q.DATAA
b[6] => q.DATAA
b[7] => q.DATAA
b[8] => q.DATAA
b[9] => q.DATAA
b[10] => q.DATAA
b[11] => q.DATAA
b[12] => q.DATAA
b[13] => q.DATAA
b[14] => q.DATAA
b[15] => q.DATAA
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
sel => q.OUTPUTSELECT
q[0] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[12] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[13] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[14] <= q.DB_MAX_OUTPUT_PORT_TYPE
q[15] <= q.DB_MAX_OUTPUT_PORT_TYPE


|CPU|ControlUnit:ControlUnitS
instruction[0] => ~NO_FANOUT~
instruction[1] => ~NO_FANOUT~
instruction[2] => ~NO_FANOUT~
instruction[3] => ~NO_FANOUT~
instruction[4] => ~NO_FANOUT~
instruction[5] => ~NO_FANOUT~
instruction[6] => ~NO_FANOUT~
instruction[7] => ~NO_FANOUT~
instruction[8] => ~NO_FANOUT~
instruction[9] => ~NO_FANOUT~
instruction[10] => ~NO_FANOUT~
instruction[11] => ~NO_FANOUT~
instruction[12] => ~NO_FANOUT~
instruction[13] => ~NO_FANOUT~
instruction[14] => ~NO_FANOUT~
instruction[15] => ~NO_FANOUT~
zr => ~NO_FANOUT~
ng => ~NO_FANOUT~
muxALUI_A <= muxALUI_A.DB_MAX_OUTPUT_PORT_TYPE
muxAM_ALU <= muxAM_ALU.DB_MAX_OUTPUT_PORT_TYPE
muxSD_ALU <= muxSD_ALU.DB_MAX_OUTPUT_PORT_TYPE
zx <= zx.DB_MAX_OUTPUT_PORT_TYPE
nx <= nx.DB_MAX_OUTPUT_PORT_TYPE
zy <= zy.DB_MAX_OUTPUT_PORT_TYPE
ny <= ny.DB_MAX_OUTPUT_PORT_TYPE
f <= f.DB_MAX_OUTPUT_PORT_TYPE
no <= no.DB_MAX_OUTPUT_PORT_TYPE
loadA <= loadA.DB_MAX_OUTPUT_PORT_TYPE
loadD <= loadD.DB_MAX_OUTPUT_PORT_TYPE
loadS <= loadS.DB_MAX_OUTPUT_PORT_TYPE
loadM <= loadM.DB_MAX_OUTPUT_PORT_TYPE
loadPC <= comb.DB_MAX_OUTPUT_PORT_TYPE


